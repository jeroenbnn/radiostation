@import 'tailwindcss';

@plugin 'tailwindcss-animate';
@plugin '@tailwindcss/container-queries';

@custom-variant dark (&:where(.dark, .dark *));

@theme {
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@utility maximize-enter {
  transform: translateY(100%);

  @media (width >= theme(--breakpoint-md)) {
    transform: translateX(100%);
  }
}

@utility maximize-enter-active {
  transform: translateY(0);
  transition: transform 300ms ease-in-out;

  @media (width >= theme(--breakpoint-md)) {
    transform: translateX(0);
  }
}

@utility maximize-exit {
  transform: translateY(0);
}

@utility maximize-exit-active {
  transform: translateY(100%);
  transition: transform 300ms ease-in-out;

  @media (width >= theme(--breakpoint-md)) {
    transform: translateX(100%);
  }
}

@layer utilities {
  html,
  :host {
    font-family:
      'Twemoji Country Flags', ui-sans-serif, system-ui, sans-serif,
      'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
      'Noto Color Emoji';
  }
}

@layer base {
  :root {
    --background: 60 9.1% 97.8%; /* stone-50 */
    --foreground: 12 6.5% 33%;
    --card: 0 0% 100%; /* white */
    --card-foreground: 20 14.3% 4.9%; /* stone-900 */
    --popover: 0 0% 100%; /* white */
    --popover-foreground: 20 14.3% 4.9%; /* stone-900 */
    --primary: 22.59deg 100% 50%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 60 4.8% 95.9%; /* stone-100 */
    --muted-foreground: 25 5.3% 44.7%; /* stone-500 */
    --accent: 60 4.8% 95.9%; /* stone-100 */
    --accent-foreground: 24 9.8% 10%; /* stone-900 */
    --destructive: 0 84.2% 60.2%; /* red-500 */
    --destructive-foreground: 60 9.1% 97.8%; /* stone-50 */
    --border: 20 5.9% 90%; /* stone-200 */
    --input: 20 5.9% 90%; /* stone-200 */
    --ring: 20 14.3% 4.9%; /* stone-900 */
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 24 9.8% 10%; /* stone-900 */
    --foreground: 60 9.1% 75%;
    --card: 12 6.5% 15.1%; /* stone-800 */
    --card-foreground: 60 9.1% 97.8%; /* stone-50 */
    --popover: 24 9.8% 10%; /* stone-900 */
    --popover-foreground: 60 9.1% 97.8%; /* stone-50 */
    --primary: 22.59deg 100% 50%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 12 6.5% 15.1%; /* stone-800 */
    --muted-foreground: 24 5.4% 63.9%; /* stone-400 */
    --accent: 12 6.5% 15.1%; /* stone-800 */
    --accent-foreground: 60 9.1% 97.8%; /* stone-50 */
    --destructive: 0 62.8% 30.6%; /* red-700 */
    --destructive-foreground: 60 9.1% 97.8%; /* stone-50 */
    --border: 12 6.5% 15.1%; /* stone-800 */
    --input: 12 6.5% 15.1%; /* stone-800 */
    --ring: 24 5.7% 82.9%; /* stone-200 */
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }

  section ::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  section ::-webkit-scrollbar-track {
    background: transparent;
  }

  section ::-webkit-scrollbar-thumb {
    background: rgb(156 163 175 / 0.5); /* gray-400 with 50% opacity */
    border-radius: 5px;
  }

  section ::-webkit-scrollbar-thumb:hover {
    background: rgb(156 163 175 / 0.7);
  }
}

@layer utilities {
  .is-dragging {
    user-select: none;
    -webkit-user-select: none;
  }

  .is-dragging * {
    cursor: ns-resize !important;
  }

  select.custom-select-arrow {
    appearance: none;
    background-image:
      linear-gradient(45deg, transparent 50%, hsl(var(--muted-foreground)) 50%),
      linear-gradient(135deg, hsl(var(--muted-foreground)) 50%, transparent 50%);
    background-position:
      calc(100% - 1.35rem) 1.25rem,
      calc(100% - 1rem) 1.25rem;
    background-size:
      0.35rem 0.35rem,
      0.35rem 0.35rem;
    background-repeat: no-repeat;
  }

  select.custom-select-arrow--small {
    background-position:
      calc(100% - 0.6rem) 0.75rem,
      calc(100% - 0.35rem) 0.75rem;
    background-size:
      0.25rem 0.25rem,
      0.25rem 0.25rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }

  .app-shell-header {
    background: linear-gradient(to bottom, hsl(var(--card)), transparent 50%);
  }

  .player-minimized-backdrop {
    background: linear-gradient(to top, hsl(var(--card)), transparent 50%);
  }
}
